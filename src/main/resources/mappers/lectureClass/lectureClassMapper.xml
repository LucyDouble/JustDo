<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="LectureClass">
<resultMap type="LectureClass" id="LectureClassResult">
	<id column="lectureclass_no" property="lectureclass_no"/>
	<result column="lecture_no" property="lecture_no"/>
	<result column="lectureclass_class" property="lectureclass_class"/>
	<result column="lectureclass_start" property="lectureclass_start"/>
	<result column="lectureclass_end" property="lectureclass_end"/>
</resultMap>

<insert id="addLectureClass" parameterType="java.util.Map">
	INSERT INTO LECTURECLASS(lectureclass_no ,lecture_no, lectureclass_class, lectureclass_start, lectureclass_end)
	SELECT SEQ_LECTURECLASS.nextval, A.* from( 
	<foreach collection="list" item="i" separator="UNION ALL ">
	SELECT #{i.lecture_no} as lecture_no, #{i.lectureclass_class} as lectureclass_class,
			to_date(#{i.lectureclass_start},'hh24:mi') as lectureclass_start,
			to_date(#{i.lectureclass_end},'hh24:mi') as lectureclass_end
	FROM dual
	</foreach>) A
</insert>

<select id="viewLectureClass" resultType="LectureClass" parameterType="string">
	SELECT * FROM LECTURECLASS where lecture_no = #{lecture_no}
</select>

<select id="listLectureClass" resultMap="LectureClassResult">
	SELECT * FROM LECTURECLASS
</select>

<!-- 분반포함 목록 조회 -->
<select id="listJoinClass" resultType="LectureClass" parameterType="hashMap">
select rownum rnum, le.lecture_no, le.lectureclass_class, le.lectureclass_no, to_char(le.lectureclass_start,'hh24:mi') lectureclass_start, to_char(le.lectureclass_end,'hh24:mi') lectureclass_end,
	lt.lecture_title, lt.lecture_limit, lt.lecture_major, lt.lecture_personnel, lt.lecture_reference, lt.lecture_target, 
	lt.lecture_start, lt.lecture_end, lt.lecture_state, lt.lecture_check, lt.name
from lectureclass LE join (select * from lecture L join teacher T on l.teacher_number = t.teacher_number) LT 
on le.lecture_no= lt.lecture_no 
where (lt.lecture_title like '%'||#{keyword}||'%' or lt.name like '%'||#{keyword}||'%') and  lt.lecture_state = 0 
order by rnum desc
</select>

<!-- 페이징 처리 -->
<select id="getlistCount" resultType="int" parameterType="Map">
	select count(*) 
	from lectureclass LC join (select * from lecture L join teacher T on l.teacher_number = t.teacher_number) LT
	on lc.lecture_no = lt.lecture_no 
	where (lt.lecture_title like '%'||#{keyword}||'%' or lt.name like '%'||#{keyword}||'%') and lt.lecture_state = 0 
</select>

<!-- 캘린더에 출력할 분반포함 목록 조회 -->
<select id="listCalendarClass" resultType="LectureClass" parameterType="hashMap">
select rownum rnum, le.lecture_no, le.lectureclass_class, le.lectureclass_no, to_char(le.lectureclass_start,'hh24:mi') lectureclass_start, to_char(le.lectureclass_end,'hh24:mi') lectureclass_end,
	lt.lecture_title, lt.lecture_limit, lt.lecture_major, lt.lecture_personnel, lt.lecture_reference, lt.lecture_target, 
	lt.lecture_start, lt.lecture_end, lt.lecture_state, lt.lecture_check, lt.name
from lectureclass LE join (select * from lecture L join teacher T on l.teacher_number = t.teacher_number) LT 
on le.lecture_no= lt.lecture_no 
where (lt.lecture_title like '%'||#{keyword}||'%' or lt.name like '%'||#{keyword}||'%') and  lt.lecture_state = 0 
order by rnum desc
</select>

</mapper>


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="exam">
	<select id="listExam" resultType="Exam" parameterType="hashMap">
            select rownum as rnum, exam_no,lecture_no ,exam_subject,exam_content,exam_date
                            ,to_char(exam_date,'yyyyMMdd') as examdate , to_char(exam_start,'hh24:mi') as exam_start
                            ,to_char(exam_start,'hh24mi')as examStart  ,teacher_number ,exam_answer 
                            ,to_char(exam_end,'hh24:mi') as exam_end,  to_char(exam_end,'hh24mi')as examEnd , lecture_title
			from (select *
				     from (SELECT * 
							  FROM exam e join  lecture  l 
							  using (lecture_no)order by exam_date asc,exam_end asc))  
			 where teacher_number=#{teacher_number}
				   	   and (exam_subject like '%'||#{keyword}||'%' or lecture_title like '%'||#{keyword}||'%')
			 order by rnum desc

	</select>
	<select id="getlistCount" resultType="int" parameterType="hashMap">
		select count(*)
		from (SELECT * 
				 FROM exam e join  lecture  l 
				 using(lecture_no))
		where teacher_number=#{teacher_number}
				  and (exam_subject like '%'||#{keyword}||'%' or lecture_title like '%'||#{keyword}||'%')
		
	</select>
	<select id="viewExam" parameterType="int" resultType="Exam">
            select rownum as rnum, exam_no,lecture_no ,exam_subject,exam_content,exam_date
                            ,to_char(exam_date,'yyyyMMdd') as examdate , to_char(exam_start,'hh24:mi') as exam_start
                            ,to_char(exam_start,'hh24mi')as examStart  ,teacher_number ,exam_answer 
                            ,to_char(exam_end,'hh24:mi') as exam_end,  to_char(exam_end,'hh24mi')as examEnd , lecture_title
			from (select *
				     from (SELECT * 
							  FROM exam e join  lecture  l 
							  using (lecture_no)order by exam_no asc))  
			 where exam_no=#{exam_no}
	</select>
	<select id="checkClassNo" parameterType="Exam" resultType="int">
		select lectureclass_no from lectureclass where lecture_no=#{lecture_no} and lectureclass_class=#{lectureclass_class}
	</select>
	<insert id="addExam" parameterType="Exam">
		insert into exam values(seq_exam.nextval,#{lecture_no},
										  #{exam_subject},#{exam_date},to_date(#{exam_start},'hh24:mi'),
										  to_date(#{exam_end},'hh24:mi'),#{exam_content},#{exam_answer})
	</insert>
	<select id="registrationNo" parameterType="int" resultType="Exam">
		select registration_no from lectureclass l join registration r using(lectureclass_no) where lectureclass_no=#{lectureclass_no}
	</select>
	<insert id="addExamResult" parameterType="int">
		insert into exam_result values(
		(select nvl(max(exam_no), 0) from exam),#{registration_no},null,null
		)	
	</insert>
	<update id="editExam" parameterType="Exam">
		update exam 
		set exam_subject=#{exam_subject}, exam_date=#{exam_date}, exam_start=to_date(#{exam_start},'hh24:mi'),lecture_no=#{lecture_no},
			 exam_end= to_date(#{exam_end},'hh24:mi'),exam_content=#{exam_content},exam_answer=#{exam_answer}
		where exam_no=#{exam_no}
	</update>
	<delete id="removeExam">
		DELETE from exam where exam_no=#{exam_no}
	</delete>
	<select id="listExamResult" resultType="Exam" parameterType="Map">
		select df.*,er.exam_grade
		from(select rownum as rnum, exam_no, lecture_no, exam_subject,exam_date,to_char(exam_start,'hh24:mi') as exam_start, to_char(exam_end,'hh24:mi') as exam_end, 
		            exam_content, student_number, lectureclass_class,name,exam_submit,registration_no,exam_answer
		     from(select el.*,s.name as name 
		          from(select e.*,l.student_number ,l.lectureclass_class as lectureclass_class,l.exam_submit as exam_submit,l.registration_no
		               from exam e join (select * 
		                                 from exam_result er join (select * from registration join lectureclass using(lectureclass_no) ) r 
		                                 using (registration_no)) l 
		                on e.exam_no=l.exam_no
		                where e.exam_no=#{exam_no})el join student s 
		          on el.student_number=s.student_number order by name asc )) df join exam_result er 
		     on df.registration_no= er.registration_no
		where er.exam_no=#{exam_no} and name like '%'||#{keyword}||'%'
		order by rnum asc
	</select>
	<select id="viewExamResult" parameterType="Exam" resultType="Exam">
	select exam_content,exam_submit ,exam_answer
	from exam join exam_result 
	using(exam_no) where exam_no=#{exam_no}  and registration_no=#{registration_no}	
	
	</select>
	<select id="getlistExamResultCount" resultType="int" parameterType="Map">
		select count(*)
		from(select el.*,s.name as name 
		        from(select e.*,l.student_number ,l.lectureclass_class as lectureclass_class,l.exam_submit as exam_submit,l.registration_no
		                from exam e join (select * 
		                                    from exam_result er join (select * from registration join lectureclass using(lectureclass_no) ) r 
		                                    using (registration_no)) l 
		                on e.exam_no=l.exam_no 
		                where e.exam_no=#{exam_no} )el join student s 
		        on el.student_number=s.student_number order by name asc
		        )
		<if test='keyword !=null || !keyword.equals("")'>
			 where name like '%'||#{keyword}||'%'
		</if>
	</select>
	<update id="editExamGrade" parameterType="Exam">
		update exam_result set exam_grade=#{exam_grade} where exam_no=#{exam_no} and registration_no=#{registration_no}
	</update>
	<select id="getCountClass1" parameterType="int" resultType="int">
		select count(*) 
		from (select * 
				from exam_result join registration 
				using(registration_no)
				where exam_no = #{exam_no}) wr join lectureclass lc 
		using(lectureclass_no) 
		where lectureclass_class=1
	</select>
	<select id="getGradeExam1" parameterType="int" resultType="int">
		select nvl(wr.exam_grade,0) as exam_grade
		from (select * 
				from exam_result join registration 
				using(registration_no)
				where exam_no = #{exam_no}) wr join lectureclass lc 
		using(lectureclass_no) 
		where lectureclass_class=1
	</select>
	<select id="getCountClass2" parameterType="int" resultType="int">
		select count(*) 
		from (select * 
				from exam_result join registration 
				using(registration_no)
				where exam_no = #{exam_no}) wr join lectureclass lc 
		using(lectureclass_no) 
		where lectureclass_class=2
	</select>
	<select id="getGradeExam2" parameterType="int" resultType="int">
		select nvl(wr.exam_grade,0) as exam_grade
		from (select * 
				from exam_result join registration 
				using(registration_no)
				where exam_no = #{exam_no}) wr join lectureclass lc 
		using(lectureclass_no) 
		where lectureclass_class=2
	</select>
	<select id="listSubmitExam" parameterType="Map" resultType="Exam">
 select yong.*,hwi.exam_grade
 from  (select rownum rnum,lecture_no,exam_no,exam_subject,exam_date,lecture_title,name,exam_content,lectureclass_no,to_char(exam_date,'yyyyMMdd') as examDate,
		        lectureclass_class,student_number,registration_no,exam_start,exam_end,to_char(exam_starts,'hh24mi') as examstart,to_char(exam_ends,'hh24mi') as examend
		from (select wltlc.lecture_no,wltlc.exam_no,exam_subject,wltlc.exam_date,wltlc.lecture_title,
				        wltlc.name,wltlc.exam_content,wltlc.lectureclass_no,wltlc.lectureclass_class,r.student_number,r.registration_no,
				        to_char(exam_start,'hh24:mi') as exam_start ,to_char(exam_end,'hh24:mi') as exam_end, exam_start as exam_starts ,exam_end as exam_ends
		      from (select wlt.lecture_no,wlt.exam_no,exam_subject,wlt.exam_start,wlt.exam_end,wlt.exam_date,wlt.lecture_title,wlt.name,wlt.exam_content,lc.lectureclass_no,lc.lectureclass_class
		            from (select wl.*,t.name
		                  from (SELECT * 
		                        FROM exam w join  lecture  l 
		                        using (lecture_no)order by exam_no asc) wl join teacher t 
		                  on wl.teacher_number=t.teacher_number
		                  where (exam_subject like '%'||#{keyword}||'%' or lecture_title like '%'||#{keyword}||'%' or name like '%'||#{keyword}||'%') ) wlt join lectureclass lc 
		            on wlt.lecture_no=lc.lecture_no ) wltlc join registration r 
		      on wltlc.lectureclass_no=r.lectureclass_no
		      where student_number=#{student_number}
		      order by exam_date asc,exam_end asc)
		order by rnum desc) yong inner join exam_result hwi 
on yong.registration_no=hwi.registration_no and yong.exam_no=hwi.exam_no	
order by rnum desc	
	
<!--         select rownum rnum,lecture_no,exam_no,exam_subject,exam_date,lecture_title,name,exam_content,lectureclass_no,to_char(exam_date,'yyyyMMdd') as examDate,
		        lectureclass_class,student_number,registration_no,exam_start,exam_end,to_char(exam_starts,'hh24mi') as examstart,to_char(exam_ends,'hh24mi') as examend
		from (select wltlc.lecture_no,wltlc.exam_no,exam_subject,wltlc.exam_date,wltlc.lecture_title,
				        wltlc.name,wltlc.exam_content,wltlc.lectureclass_no,wltlc.lectureclass_class,r.student_number,r.registration_no,
				        to_char(exam_start,'hh24:mi') as exam_start ,to_char(exam_end,'hh24:mi') as exam_end, exam_start as exam_starts ,exam_end as exam_ends
		      from (select wlt.lecture_no,wlt.exam_no,exam_subject,wlt.exam_start,wlt.exam_end,wlt.exam_date,wlt.lecture_title,wlt.name,wlt.exam_content,lc.lectureclass_no,lc.lectureclass_class
		            from (select wl.*,t.name
		                  from (SELECT * 
		                        FROM exam w join  lecture  l 
		                        using (lecture_no)order by exam_no asc) wl join teacher t 
		                  on wl.teacher_number=t.teacher_number
		                  where (exam_subject like '%'||#{keyword}||'%' or lecture_title like '%'||#{keyword}||'%') ) wlt join lectureclass lc 
		            on wlt.lecture_no=lc.lecture_no ) wltlc join registration r 
		      on wltlc.lectureclass_no=r.lectureclass_no
		      where student_number=#{student_number}
		      order by exam_date asc)
		order by rnum desc -->

	</select>
	<select id="getlistSubmitCount" resultType="int" parameterType="Map">
		select count(*)
		from (select *
		        from (select wl.*,t.name
		                from (SELECT * 
		                      FROM exam w join  lecture  l 
		                      using (lecture_no)order by exam_no asc) wl join teacher t 
		                on wl.teacher_number=t.teacher_number) wlt join lectureclass lc 
		        on wlt.lecture_no=lc.lecture_no) wltlc join registration r 
		on wltlc.lectureclass_no=r.lectureclass_no
		where student_number=#{student_number}
			 and (exam_subject like '%'||#{keyword}||'%' or lecture_title like '%'||#{keyword}||'%' or name like '%'||#{keyword}||'%')
		
	</select>
	<select id="viewSubmitExam" resultType="Exam">
		select *
		from (select *       
		        from (select * 
		                from registration r join exam_result ws using(registration_no)  
		                where exam_no=#{exam_no} and registration_no=#{registration_no}) r_ws join exam w 
		                using(exam_no)) ww join lecture l using(lecture_no)
	</select>
	<select id="timeSubmitExam" resultType="Exam">
		select to_char(exam_date,'yyyymmdd') as examdate , to_char(exam_start,'hh24:mi') as exam_start,to_char(exam_end,'hh24:mi') as exam_end,
                 to_char(exam_start,'hh24mi') as examStart, to_char(exam_end,'hh24mi') as examEnd
		from (select *       
		        from (select * 
		                from registration r join exam_result ws using(registration_no)  
		                where exam_no=#{exam_no} and registration_no=#{registration_no}) r_ws join exam w 
		                using(exam_no)) ww join lecture l using(lecture_no)
	</select>
	<update id="submitExam" parameterType="Exam">
		update exam_result set exam_submit=#{exam_submit} where exam_no = #{exam_no} and registration_no=#{registration_no}
	</update>
	<update id="removeSubmitExam" parameterType="Exam">
		update exam_result set exam_submit=null where exam_no=#{exam_no} and registration_no=#{registration_no}
	</update>
</mapper>
